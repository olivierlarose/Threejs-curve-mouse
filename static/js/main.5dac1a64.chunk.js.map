{"version":3,"sources":["logo.svg","components/curve.js","App.js","reportWebVitals.js","index.js"],"names":["Curve","props","cube","mouse","THREE","curveStrength","uniforms","uTexture","value","uOffset","uAlpha","this","scene","camera","window","innerWidth","innerHeight","renderer","alpha","antialias","setSize","clock","mount","appendChild","domElement","geometry","load","process","texture","material","vertexShader","fragmentShader","transparent","position","z","add","render","animate","e","x","clientX","y","clientY","unproject","sub","normalize","distance","copy","multiplyScalar","requestAnimationFrame","bind","clone","TweenLite","to","ease","Power4","easeOut","onMouseMove","mouseMove","style","height","width","id","ref","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dac1a64.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { TweenLite, Power4, Power3 } from 'gsap/all';\nimport { Vector2 } from 'three';\nimport { Tween } from 'gsap/gsap-core';\n \nexport default class Curve extends Component {\n\n    constructor(props){\n        super(props);\n        this.cube = null;\n        this.mouse = new THREE.Vector3(0, 0, 0);\n        this.curveStrength = 0.2;\n        this.uniforms = {\n            uTexture: {\n              value: null\n            },\n            uOffset: {\n              value: new THREE.Vector2(0.0, 0.0)\n            },\n            uAlpha: {\n              value: 1\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(55, window.innerWidth/window.innerHeight, 1, 5);\n        this.renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.clock = new THREE.Clock();\n        this.mount.appendChild( this.renderer.domElement );\n\n        const geometry = new THREE.PlaneGeometry(658/1000, 817/1000, 10, 30);\n        const loader = new THREE.TextureLoader();\n        loader.load(process.env.PUBLIC_URL + '/images/car.png', (texture) => {\n            this.uniforms.uTexture.value = texture;\n\n            const material = new THREE.ShaderMaterial({\n                uniforms: this.uniforms,\n                vertexShader: `\n                  uniform vec2 uOffset;\n                  varying vec2 vUv;\n                  #define M_PI 3.1415926535897932384626433832795\n\n                  vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset) {\n                    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n                    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n                    return position;\n                  }\n\n                  void main() {\n                    vUv = uv;\n                    vec3 newPosition = deformationCurve(position, uv, uOffset);\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n                  }\n                `,\n                fragmentShader: `\n                  uniform sampler2D uTexture;\n                  uniform float uAlpha;\n                  varying vec2 vUv;\n            \n                  void main() {\n                    vec3 color = texture2D(uTexture,vUv).rgb;\n                    gl_FragColor = vec4(color,1.0);\n                  }\n                `,\n                transparent: true\n              })\n\n            \n            this.cube = new THREE.Mesh(geometry, material);\n            this.camera.position.z = 2;\n            this.scene.add(this.cube);\n            this.renderer.render(this.scene, this.camera);\n        })\n       this.animate();\n    }\n\n    mouseMove(e){\n        if(!this.cube) return;\n        const x = (e.clientX / window.innerWidth) * 2 - 1;\n        const y = - (e.clientY / window.innerHeight) * 2 + 1;\n        \n        const mouse = new THREE.Vector3(x, y, 0).unproject(this.camera);\n        mouse.sub( this.camera.position ).normalize();\n        var distance = - this.camera.position.z / mouse.z;\n        this.mouse.copy(this.camera.position).add( mouse.multiplyScalar(distance));\n    }\n\n    animate() {\n        requestAnimationFrame(this.animate.bind(this));\n        if(this.cube == null) return;\n\n        this.uniforms.uOffset.value  = this.cube.position.clone().sub(this.mouse).multiplyScalar(-this.curveStrength);\n\n        const { x, y } = this.mouse;\n        TweenLite.to(this.cube.position, 1, {\n            x: x,\n            y: y,\n            ease: Power4.easeOut\n        })\n\n        this.renderer.render( this.scene, this.camera);\n    }\n\n    render(){\n        return (\n            <div onMouseMove={e => this.mouseMove(e)} style={{height: \"100vh\", width: \"100%\"}} id=\"canvas\" ref={ref => {this.mount = ref}}>\n            </div>\n        )\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport Curve from './components/curve';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Curve />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}